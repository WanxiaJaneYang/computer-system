// File name: Decode.hdl

/**
 * The instruction decoder determines the type of instruction (a or c)
 * and decodes those instructions.
 * The input in[16] is the instruction to be decoded.
 * The outputs are used as follows:
 *   type:      0 if a-instruction, 1 if c-instruction. 
 *   a:         Determines whether the ALU input uses A (0) or Memory[A] (1)
 *   c1 .. c6:  Op-code wires to ALU
 *   d1 d2 d3:  Destination wires to the load pins of A,D registers and Memory
 *   j1 j2 j3:  Jump wires to Jump Unit
 * For a-instructions, d1 should be 1, all other outputs should be 0
 * For c-instructions, outputs should correspond to their bits in the c-instruction
 */

CHIP Decode {

    IN  in[16];             // instruction to decode

    OUT type,               // Instruction type
        a,                  // ALU A/M
        c1,c2,c3,c4,c5,c6,  // Op-code wires to ALU
        d1,d2,d3,           // Destination wires
        j1,j2,j3;           // Jump wires

PARTS:
	And(a=in[15], b=in[15], out=type);//type=in[15]
	Mux(a=false, b=in[12], sel=in[15], out=a);//if in[15]==0, a=0, else a=in[12]
	Mux(a=false, b=in[11], sel=in[15], out=c1);//if in[15]==0, c1=0, else c1=in[11]
	Mux(a=false, b=in[10], sel=in[15], out=c2);//if in[15]==0, c2=0, else c2=in[10]
	Mux(a=false, b=in[9], sel=in[15], out=c3);//if in[15]==0, c3=0, else c3=in[9]
	Mux(a=false, b=in[8], sel=in[15], out=c4);//if in[15]==0, c4=0, else c4=in[8]
	Mux(a=false, b=in[7], sel=in[15], out=c5);//if in[15]==0, c5=0, else c5=in[7]
	Mux(a=false, b=in[6], sel=in[15], out=c6);//if in[15]==0, c6=0, else c6=in[6]
	Mux(a=true, b=in[5], sel=in[15],out=d1);//if in[15]==0, d1=1, else d1=in[5]
	Mux(a=false, b=in[4], sel=in[15], out=d2);//if in[15]==0, d2=0, else d2=in[4]
	Mux(a=false, b=in[3], sel=in[15], out=d3);//if in[15]==0, d3=0, else d3=in[3]
	Mux(a=false, b=in[2], sel=in[15], out=j1);//if in[15]==0, j1=0, else d3=in[2]
	Mux(a=false, b=in[1], sel=in[15], out=j2);//if in[15]==0, j2=0, else d3=in[1]
	Mux(a=false, b=in[0], sel=in[15], out=j3);//if in[15]==0, j3=0, else d3=in[0]
    // Put your code here:
}