// File name: And16Way.hdl

/**
 * 16-way And: 
 * out = (in[0] and in[1] and ... and in[15])
 */

CHIP And16Way {
    IN in[16];
    OUT out;

    PARTS:
    	And(a=in[0], b=in[1], out=tmp1);
	//out=in[0]*in[1]
	And(a=tmp1, b=in[2], out=tmp2);
	//out=in[0]*in[1]*in[2]
	And(a=tmp2, b=in[3], out=tmp3);
	//out=in[0]*in[1]*in[2]*in[3]
	And(a=tmp3, b=in[4], out=tmp4);
	//out=in[0]*in[1]*in[2]*in[3]*in[4]
	And(a=tmp4, b=in[5], out=tmp5);
	//out=in[0]*in[1]*in[2]*in[3]*in[4]*in[5]
	And(a=tmp5, b=in[6], out=tmp6);
	//out=in[0]*in[1]*in[2]*in[3]*in[4]*in[5]*in[6]
	And(a=tmp6, b=in[7], out=tmp7);
	//out=in[0]*in[1]*in[2]*in[3]*in[4]*in[5]*in[6]*in[7]
	And(a=tmp7, b=in[8], out=tmp8);
	//out=in[0]*in[2]...*in[8]
	And(a=tmp8, b=in[9], out=tmp9);
	//out=in[0]*in[2]...*in[9]
	And(a=tmp9, b=in[10], out=tmp10);
	//out=in[0]*in[2]...*in[10]
	And(a=tmp10, b=in[11], out=tmp11);
	//out=in[0]*in[2]...*in[11]
	And(a=tmp11, b=in[12], out=tmp12);
	//out=in[0]*in[2]...*in[12]
	And(a=tmp12, b=in[13], out=tmp13);
	//out=in[0]*in[2]...*in[13]
	And(a=tmp13, b=in[14], out=tmp14);
	//out=in[0]*in[2]...*in[14]
	And(a=tmp14, b=in[15], out=out);
	//out=in[0]*in[2]...*in[15]
}